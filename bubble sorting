//bubble sorting done using recursive and non recursive functions to sort n number of elements
//it is done using switch case


#include<stdio.h>
#include<stdlib.h>

void bubbleSort(int *data, int n) {
        int i, temp;

        if (n > 0) {
        for (i = 1; i < n; i++) {
        if (data[i - 1] > data[i])
            {
             temp = data[i];
             data[i] = data[i - 1];
             data[i - 1] = temp;
            }
                }

                bubbleSort(data, n - 1);
        }

        return;
  }
 int main()
 { int ch;
   printf("======================================================");
   printf("\n\t\t\tMENU");
   printf("\n=====================================================");
   printf("\n[1] Bubble sort using Recursion method");
   printf("\n[2] Bubble sort using Non-Recursion method");
   printf("\n\nEnter your Choice:");
   scanf("%d",&ch);


   int i, n, *data,d,swap;

        /* get the number of inputs from the user */
        printf("Enter the number of inputs:");
        scanf("%d", &n);

        /* dynamically allocate memory to store i/p values */
        data = (int *) malloc(sizeof(int) * n);

        /* get the input data from the user */
        for (i = 0; i < n; i++) {
                printf("data[%d]: ", i);
                scanf("%d", &data[i]);
        }

   switch(ch)
   {
     case 1:printf("\nRecursive method:\n");
     bubbleSort(data, n);
      printf("Data After Bubble Sort:\n");

        for (i = 0; i < n; i++) {

                printf("%d ", data[i]);

        }

        printf("\n");

     break;

     case 2:printf("\nNon-Recursive method:\n");
            for (i = 0 ; i < n; i++)
  {
    for (d = 0 ; d < n - i ; d++)
    {
      if (data[d] > data[d+1]) /* For decreasing order use < */
      {
        swap       = data[d];
       data[d]   = data[d+1];
        data[d+1] = swap;
      }
    }
  }

  for (i = 0; i <n ; i++)
  printf("%d\n", data[i]);
  break;

 default:printf("sorry wrong choice,try again");
   }}
